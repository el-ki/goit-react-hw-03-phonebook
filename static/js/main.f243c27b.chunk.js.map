{"version":3,"sources":["components/styles.module.scss","components/Form.js","components/ContactListForm.js","components/Filter.js","components/ContactListFilter.js","App.js","index.js"],"names":["module","exports","Form","state","name","number","handleInputChange","event","currentTarget","value","setState","handleOnSubmit","preventDefault","props","onSubmit","id","uuidv4","reset","className","styles","form","this","label","input","type","onChange","pattern","title","required","btn","Component","ContactListForm","contactArray","onDeleteContact","length","map","item","list","Filter","ContactListFilter","filterContacts","App","contacts","filter","formSubmitHandler","data","console","log","find","alert","prevState","changeFilter","deleteContact","contactId","contact","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","normalizedFilter","toLocaleLowerCase","toLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f243c27b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"styles_form__1saad\",\"btn\":\"styles_btn__1a30r\",\"label\":\"styles_label__3skX4\",\"input\":\"styles_input__1nvb4\",\"list\":\"styles_list__11Q8b\"};","import React, { Component } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport styles from \"./styles.module.scss\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleInputChange = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleOnSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.onSubmit({ ...this.state, id: uuidv4() });\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={styles.form} onSubmit={this.handleOnSubmit}>\r\n        <label className={styles.label}>\r\n          Name\r\n          <input\r\n            className={styles.input}\r\n            type=\"text\"\r\n            value={this.state.name}\r\n            onChange={this.handleInputChange}\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label className={styles.label}>\r\n          Number\r\n          <input\r\n            className={styles.input}\r\n            type=\"tel\"\r\n            value={this.state.number}\r\n            onChange={this.handleInputChange}\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button className={styles.btn} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport styles from \"./styles.module.scss\";\r\n\r\nconst ContactListForm = ({ contactArray, onDeleteContact }) => {\r\n  return (\r\n    <div>\r\n      {contactArray.length !== 0 && (\r\n        <ul>\r\n          {contactArray.map((item) => (\r\n            <li className={styles.list} key={item.id}>\r\n              {item.name}: {item.number}\r\n              <button\r\n                className={styles.input}\r\n                className={styles.btn}\r\n                onClick={() => onDeleteContact(item.id)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactListForm;\r\n","import React from \"react\";\r\nimport styles from \"./styles.module.scss\";\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label className={styles.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={styles.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n        name=\"name\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport styles from \"./styles.module.scss\";\r\n\r\nconst ContactListFilter = ({ filterContacts, value, onDeleteContact }) => {\r\n  return (\r\n    <div>\r\n      {value !== \"\" && (\r\n        <ul>\r\n          {filterContacts.map((item) => (\r\n            <li className={styles.list} key={item.id}>\r\n              {item.name}: {item.number}\r\n              <button\r\n                className={styles.input}\r\n                className={styles.btn}\r\n                onClick={() => onDeleteContact(item.id)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactListFilter;\r\n","import React, { Component } from \"react\";\r\nimport Form from \"./components/Form\";\r\nimport ContactListForm from \"./components/ContactListForm\";\r\nimport Filter from \"./components/Filter\";\r\nimport ContactListFilter from \"./components/ContactListFilter\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      // { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      // { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      // { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      // { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n    ],\r\n    filter: \"\",\r\n  };\r\n\r\n  formSubmitHandler = (data) => {\r\n    console.log(data);\r\n    const isContactAdded = this.state.contacts.find(\r\n      ({ name }) => name === data.name\r\n    );\r\n    if (isContactAdded) {\r\n      alert(`${data.name} is already in contacts`);\r\n      return;\r\n    }\r\n    this.setState((prevState) => ({\r\n      contacts: [...prevState.contacts, data],\r\n    }));\r\n  };\r\n\r\n  changeFilter = (event) => {\r\n    this.setState({ filter: event.currentTarget.value });\r\n  };\r\n\r\n  deleteContact = (contactId) => {\r\n    this.setState((prevState) => ({\r\n      contacts: prevState.contacts.filter(\r\n        (contact) => contact.id !== contactId\r\n      ),\r\n    }));\r\n    this.setState({ filter: \"\" });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const contacts = localStorage.getItem(\"contacts\");\r\n    const parsedContacts = JSON.parse(contacts);\r\n    if (parsedContacts) {\r\n      this.setState({ contacts: parsedContacts });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.contacts !== prevState) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const normalizedFilter = this.state.filter.toLocaleLowerCase();\r\n    const filterContacts = this.state.contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n    console.log(filterContacts);\r\n    return (\r\n      <div className=\"App\">\r\n        <h2>Phonebook</h2>\r\n        <Form onSubmit={this.formSubmitHandler} />\r\n        <h2>Contacts</h2>\r\n        <ContactListForm\r\n          contactArray={this.state.contacts}\r\n          onDeleteContact={this.deleteContact}\r\n        />\r\n        <Filter value={this.state.filter} onChange={this.changeFilter} />\r\n        <ContactListFilter\r\n          filterContacts={filterContacts}\r\n          value={this.state.filter}\r\n          onDeleteContact={this.deleteContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}